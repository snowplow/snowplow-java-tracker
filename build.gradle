/*
 * Copyright (c) 2014-2022 Snowplow Analytics Ltd. All rights reserved.
 *
 * This program is licensed to you under the Apache License Version 2.0,
 * and you may not use this file except in compliance with the Apache License Version 2.0.
 * You may obtain a copy of the Apache License Version 2.0 at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the Apache License Version 2.0 is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Apache License Version 2.0 for the specific language governing permissions and limitations there under.
 */

import java.time.Duration

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'signing'
    id 'idea'
}

wrapper.gradleVersion = '6.5.0'

group = 'com.snowplowanalytics'
archivesBaseName = 'snowplow-java-tracker'
version = '0.12.0'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'

def javaVersion = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

configure([compileJava, compileTestJava]) {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    options.encoding = 'UTF-8'
}

java {
    registerFeature('okhttpSupport') {
        usingSourceSet(sourceSets.main)
    }
    registerFeature('apachehttpSupport') {
        usingSourceSet(sourceSets.main)
    }
}

test {
    useJUnitPlatform {
        includeEngines 'junit-vintage'
    }
}

dependencies {
    // Apache Commons
    api 'commons-codec:commons-codec:1.14'
    api 'commons-net:commons-net:3.6'

    // Apache HTTP
    apachehttpSupportApi 'org.apache.httpcomponents:httpclient:4.5.13'
    apachehttpSupportApi 'org.apache.httpcomponents:httpasyncclient:4.1.5'

    // Square OK HTTP
    okhttpSupportApi 'com.squareup.okhttp3:okhttp:4.9.3'

    // SLF4J logging API
    api 'org.slf4j:slf4j-api:1.7.36'
    testImplementation 'org.slf4j:slf4j-simple:1.7.36'

    // Jackson JSON processor
    api 'com.fasterxml.jackson.core:jackson-databind:2.13.2.2'

    // Preconditions
    api 'com.google.guava:guava:31.1-jre'

    // Testing libraries
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testCompileOnly 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'
}

task sourceJar(type: Jar, dependsOn: 'generateSources') {
    from sourceSets.main.allJava
}

task generateSources {
    project.ext.set("outputDir", "$projectDir/src/main/java/com/snowplowanalytics/snowplow/tracker")
    doFirst {
        println outputDir
        def srcFile = new File((String) outputDir, "Version.java")
        srcFile.parentFile.mkdirs()
        srcFile.write(
                """/*
 * Copyright (c) 2014-2022 Snowplow Analytics Ltd. All rights reserved.
 *
 * This program is licensed to you under the Apache License Version 2.0,
 * and you may not use this file except in compliance with the Apache License Version 2.0.
 * You may obtain a copy of the Apache License Version 2.0 at http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the Apache License Version 2.0 is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Apache License Version 2.0 for the specific language governing permissions and limitations there under.
 */
package com.snowplowanalytics.snowplow.tracker;
// DO NOT EDIT. AUTO-GENERATED.
/**
* The release version of the Snowplow Java tracker.
*/
public class Version {
    static final String TRACKER = "java-$project.version";
    static final String VERSION = "$project.version";
}
""")
    }
}

compileJava.dependsOn generateSources
compileJava.source generateSources.outputs.files, sourceSets.main.java


task printVersion {
    doLast {
        print "$project.version"
    }
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId group
            artifactId 'snowplow-java-tracker'
            version version
            suppressPomMetadataWarningsFor('apachehttpSupportApiElements')
            suppressPomMetadataWarningsFor('apachehttpSupportRuntimeElements')
            suppressPomMetadataWarningsFor('okhttpSupportApiElements')
            suppressPomMetadataWarningsFor('okhttpSupportRuntimeElements')
            pom {
                name = 'snowplow-java-tracker'
                description = 'Snowplow event tracker for Java. Add analytics to your Java desktop and server apps, servlets and games.'
                url = 'https://github.com/snowplow/snowplow-java-tracker/'
                inceptionYear = '2014'

                packaging = 'jar'
                groupId = 'com.snowplowanalytics'

                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                scm {
                    connection = 'https://github.com/snowplow/snowplow-java-tracker.git'
                    url = 'https://github.com/snowplow/snowplow-java-tracker'
                }
                developers {
                    developer {
                        name = 'Snowplow Analytics Ltd'
                        email = 'support@snowplowanalytics.com'
                        organization = 'Snowplow Analytics Ltd'
                        organizationUrl = 'http://snowplowanalytics.com'
                    }
                }
                organization {
                    name = 'com.snowplowanalytics'
                    url = 'http://snowplowanalytics.com'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv('SONA_USER')
            password = System.getenv('SONA_PASS')
        }
    }
    transitionCheckOptions {
        maxRetries.set(360)
        delayBetween.set(Duration.ofSeconds(20))
    }
}

signing {
    if (System.getenv('ORG_GRADLE_PROJECT_signingKey') && System.getenv('ORG_GRADLE_PROJECT_signingPassword')) {
        println 'Found signing credentials. Signing...'
        def signingKey = findProperty("signingKey")
        def signingPassword = findProperty("signingPassword")
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.mavenJava
        println 'Used useInMemoryPgpKeys()'
    }
}

