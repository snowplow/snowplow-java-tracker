name: Deploy

on:
  push:
    tags:
      - '*.*.*'

jobs:
  deploy:

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Build
        run: ./gradlew build

      - name: Get tag and tracker version information
        id: version
        run: |
          echo ::set-output name=TAG_VERSION::${GITHUB_REF#refs/*/}
          echo "##[set-output name=TRACKER_VERSION;]$(./gradlew -q printVersion)"

      - name: Fail if version mismatch
        if: ${{ steps.version.outputs.TAG_VERSION != steps.version.outputs.TRACKER_VERSION }}
        run: |
          echo "Tag version (${{ steps.version.outputs.TAG_VERSION }}) doesn't match version in project (${{ steps.version.outputs.TRACKER_VERSION }})"
          exit 1

      - name: Publish to Maven Central
        run: ./gradlew publish --no-daemon --no-parallel
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONA_USER }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONA_PASS }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SONA_PGP_PASSPHRASE }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SONA_PGP_SECRET }}

      - name: Finish release
        run: ./gradlew closeAndReleaseRepository --no-daemon --no-parallel
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONA_USER }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONA_PASS }}

      - name: Release on GitHub
        uses: softprops/action-gh-release@v0.1.12
        with:
          name: Version ${{ steps.version.outputs.TRACKER_VERSION }}
          prerelease: ${{ contains(steps.version.outputs.TRACKER_VERSION, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}